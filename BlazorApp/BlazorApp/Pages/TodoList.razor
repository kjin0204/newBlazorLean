@page "/TodoList"
@inject ITodoRepository TodoReposiroty

<h2>TodoListInMemory</h2>

<form @onsubmit="SetTodoList">
    <input @bind=@newTodo/>
</form>

<h3>남은 할일 @todoList.Count(t => !t.IsDone) 개 남았습니다.</h3>
<br />

@if (todoList != null)
{
    <ul>
        @foreach (var todo in todoList)
        {
            <li>
                <input type="checkbox" @bind="@todo.IsDone" />
                <input @bind="@todo.todo" />
                <input type="button"  @onclick="() => DeleteTodo(todo)" value="삭제">

            </li>
        }
    </ul>
}
else
{
    <p>로딩중 .....</p>
}



@code {
    List<Todo> todoList = new List<Todo>();
    string newTodo = string.Empty;

    void a(string message)
    {
        // 여기에 메소드 실행 시 수행할 코드를 작성합니다.
        Console.WriteLine(message);
    }

    //page 로드시 발생하는 이벤트.
    protected override async Task OnInitializedAsync()
    {
       await GetTodos();
    }

    private async Task<List<Todo>> GetTodos()
    {
        todoList = await TodoReposiroty.GetAllTodos();
        return todoList;
    }

    private async Task SetTodoList()
    {
        await TodoReposiroty.SetTodo(new Todo() { todo = newTodo });
        await GetTodos();
        newTodo = string.Empty;
    }


    private async Task DeleteTodo(Todo todo)
    {
        await TodoReposiroty.DeleteTodo(todo);
        await GetTodos();
    }


}
